{"ast":null,"code":"import React,{useState,useEffect}from'react';import'../styles/login.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Usuario=()=>{const[nombreUsuario,setNombreUsuario]=useState('');const[contrasena,setContrasena]=useState('');const[confirmarContrasena,setConfirmarContrasena]=useState('');const[usuarios,setUsuarios]=useState([]);const[usuarioSeleccionado,setUsuarioSeleccionado]=useState('');const[nombreError,setNombreError]=useState('');const[contrasenaError,setContrasenaError]=useState('');useEffect(()=>{// Lógica para obtener la lista de usuarios (puedes hacer una solicitud al backend aquí)\n// Ejemplo ficticio:\nconst obtenerUsuarios=async()=>{try{const response=await fetch('http://localhost:5000/usuarios');if(response.ok){const data=await response.json();setUsuarios(data);}else{console.error('Error al obtener la lista de usuarios');}}catch(error){console.error('Error al obtener la lista de usuarios:',error);}};obtenerUsuarios();},[]);const handleNombreUsuarioChange=e=>{const value=e.target.value;setNombreUsuario(value);// Restricciones de longitud para el nombre de usuario\nif(value.length<6){setNombreError('El nombre de usuario debe tener al menos 6 caracteres');}else{setNombreError('');}};const handleContrasenaChange=e=>{const value=e.target.value;setContrasena(value);// Restricciones de longitud para la contraseña\nif(value.length<8){setContrasenaError('La contraseña debe tener al menos 8 caracteres');}else{setContrasenaError('');}};const handleConfirmarContrasenaChange=e=>{setConfirmarContrasena(e.target.value);};const handleUsuarioSeleccionadoChange=e=>{setUsuarioSeleccionado(e.target.value);};const handleCrearUsuarioSubmit=async e=>{e.preventDefault();if(contrasena!==confirmarContrasena){alert('Las contraseñas no coinciden');return;}// Restricciones de longitud para el nombre de usuario y la contraseña\nif(nombreUsuario.length<6){alert('El nombre de usuario debe tener al menos 6 caracteres');return;}if(contrasena.length<8){alert('La contraseña debe tener al menos 8 caracteres');return;}try{const response=await fetch('http://localhost:5000/usuarios',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({nombre:nombreUsuario,password:contrasena})});if(response.ok){alert('Usuario creado exitosamente');// Borrar los campos después de crear un usuario\nsetNombreUsuario('');setContrasena('');setConfirmarContrasena('');window.location.reload();}else{alert('Error al crear usuario');}}catch(error){console.error('Error al enviar datos al backend:',error);}};const handleBorrarUsuarioSubmit=async e=>{e.preventDefault();// Verificar si se ha seleccionado un usuario\nif(!usuarioSeleccionado){alert('Por favor, selecciona un usuario para borrar');return;}try{const response=await fetch(\"http://localhost:5000/usuarios/\".concat(usuarioSeleccionado),{method:'DELETE'});if(response.ok){alert('Usuario borrado exitosamente');window.location.reload();}else{const data=await response.json();alert(\"Error al borrar usuario: \".concat(data.error));}}catch(error){console.error('Error al enviar solicitud de borrado al backend:',error);alert('Error al conectar con el servidor');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"py-5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"pb-3\",children:\"Crear Usuario\"}),/*#__PURE__*/_jsxs(\"form\",{action:\"#\",method:\"post\",onSubmit:handleCrearUsuarioSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"usuario\",children:\"Nombre Usuario (m\\xEDnimo 6 caracteres):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"usuario\",name:\"usuario\",value:nombreUsuario,onChange:handleNombreUsuarioChange,required:true}),nombreError&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message red\",children:nombreError}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"contrasena\",children:\"Contrase\\xF1a (m\\xEDnimo 8 caracteres):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"contrasena\",name:\"contrasena\",value:contrasena,onChange:handleContrasenaChange,required:true}),contrasenaError&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message red\",children:contrasenaError}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmarContrasena\",children:\"Confirmar Contrase\\xF1a:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"confirmarContrasena\",name:\"confirmarContrasena\",value:confirmarContrasena,onChange:handleConfirmarContrasenaChange,required:true}),/*#__PURE__*/_jsx(\"div\",{className:\"div pt-4\",children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Crear Usuario\"})})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"py-5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"pb-3\",children:\"Borrar Usuario\"}),/*#__PURE__*/_jsxs(\"form\",{action:\"#\",method:\"post\",onSubmit:handleBorrarUsuarioSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"selectUsuario\",children:\"Selecciona el usuario:\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"selectUsuario\",id:\"selectUsuario\",value:usuarioSeleccionado,onChange:handleUsuarioSeleccionadoChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Selecciona un usuario\"}),usuarios.map(usuario=>/*#__PURE__*/_jsx(\"option\",{value:usuario.id,children:usuario.nombre},usuario.id))]}),/*#__PURE__*/_jsx(\"div\",{className:\"div pt-4\",children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Borrar Usuario\"})})]})]})})]});};export default Usuario;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Usuario","nombreUsuario","setNombreUsuario","contrasena","setContrasena","confirmarContrasena","setConfirmarContrasena","usuarios","setUsuarios","usuarioSeleccionado","setUsuarioSeleccionado","nombreError","setNombreError","contrasenaError","setContrasenaError","obtenerUsuarios","response","fetch","ok","data","json","console","error","handleNombreUsuarioChange","e","value","target","length","handleContrasenaChange","handleConfirmarContrasenaChange","handleUsuarioSeleccionadoChange","handleCrearUsuarioSubmit","preventDefault","alert","method","headers","body","JSON","stringify","nombre","password","window","location","reload","handleBorrarUsuarioSubmit","concat","children","className","action","onSubmit","htmlFor","type","id","name","onChange","required","map","usuario"],"sources":["C:/Users/franc/OneDrive/Documents/GitHub/galatea/src/pages/usuario.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/login.css';\r\n\r\nconst Usuario = () => {\r\n    const [nombreUsuario, setNombreUsuario] = useState('');\r\n    const [contrasena, setContrasena] = useState('');\r\n    const [confirmarContrasena, setConfirmarContrasena] = useState('');\r\n    const [usuarios, setUsuarios] = useState([]);\r\n    const [usuarioSeleccionado, setUsuarioSeleccionado] = useState('');\r\n    const [nombreError, setNombreError] = useState('');\r\n    const [contrasenaError, setContrasenaError] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Lógica para obtener la lista de usuarios (puedes hacer una solicitud al backend aquí)\r\n        // Ejemplo ficticio:\r\n        const obtenerUsuarios = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/usuarios');\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    setUsuarios(data);\r\n                } else {\r\n                    console.error('Error al obtener la lista de usuarios');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error al obtener la lista de usuarios:', error);\r\n            }\r\n        };\r\n\r\n        obtenerUsuarios();\r\n    }, []);\r\n\r\n    const handleNombreUsuarioChange = (e) => {\r\n        const value = e.target.value;\r\n        setNombreUsuario(value);\r\n\r\n        // Restricciones de longitud para el nombre de usuario\r\n        if (value.length < 6) {\r\n            setNombreError('El nombre de usuario debe tener al menos 6 caracteres');\r\n        } else {\r\n            setNombreError('');\r\n        }\r\n    };\r\n\r\n    const handleContrasenaChange = (e) => {\r\n        const value = e.target.value;\r\n        setContrasena(value);\r\n\r\n        // Restricciones de longitud para la contraseña\r\n        if (value.length < 8) {\r\n            setContrasenaError('La contraseña debe tener al menos 8 caracteres');\r\n        } else {\r\n            setContrasenaError('');\r\n        }\r\n    };\r\n\r\n    const handleConfirmarContrasenaChange = (e) => {\r\n        setConfirmarContrasena(e.target.value);\r\n    };\r\n\r\n    const handleUsuarioSeleccionadoChange = (e) => {\r\n        setUsuarioSeleccionado(e.target.value);\r\n    };\r\n\r\n    const handleCrearUsuarioSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (contrasena !== confirmarContrasena) {\r\n            alert('Las contraseñas no coinciden');\r\n            return;\r\n        }\r\n\r\n        // Restricciones de longitud para el nombre de usuario y la contraseña\r\n        if (nombreUsuario.length < 6) {\r\n            alert('El nombre de usuario debe tener al menos 6 caracteres');\r\n            return;\r\n        }\r\n\r\n        if (contrasena.length < 8) {\r\n            alert('La contraseña debe tener al menos 8 caracteres');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/usuarios', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    nombre: nombreUsuario,\r\n                    password: contrasena,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                alert('Usuario creado exitosamente');\r\n\r\n                // Borrar los campos después de crear un usuario\r\n                setNombreUsuario('');\r\n                setContrasena('');\r\n                setConfirmarContrasena('');\r\n                window.location.reload();\r\n            } else {\r\n                alert('Error al crear usuario');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al enviar datos al backend:', error);\r\n        }\r\n    };\r\n\r\n    const handleBorrarUsuarioSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Verificar si se ha seleccionado un usuario\r\n        if (!usuarioSeleccionado) {\r\n            alert('Por favor, selecciona un usuario para borrar');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/usuarios/${usuarioSeleccionado}`, {\r\n                method: 'DELETE',\r\n            });\r\n\r\n            if (response.ok) {\r\n                alert('Usuario borrado exitosamente');\r\n                window.location.reload();\r\n            } else {\r\n                const data = await response.json();\r\n                alert(`Error al borrar usuario: ${data.error}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al enviar solicitud de borrado al backend:', error);\r\n            alert('Error al conectar con el servidor');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"py-5\">\r\n                <div className=\"login-container\">\r\n                    <h2 className=\"pb-3\">Crear Usuario</h2>\r\n                    <form action=\"#\" method=\"post\" onSubmit={handleCrearUsuarioSubmit}>\r\n                        <label htmlFor=\"usuario\">Nombre Usuario (mínimo 6 caracteres):</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"usuario\"\r\n                            name=\"usuario\"\r\n                            value={nombreUsuario}\r\n                            onChange={handleNombreUsuarioChange}\r\n                            required\r\n                        />\r\n                        {nombreError && <p className=\"error-message red\">{nombreError}</p>}\r\n\r\n                        <label htmlFor=\"contrasena\">Contraseña (mínimo 8 caracteres):</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"contrasena\"\r\n                            name=\"contrasena\"\r\n                            value={contrasena}\r\n                            onChange={handleContrasenaChange}\r\n                            required\r\n                        />\r\n                        {contrasenaError && <p className=\"error-message red\">{contrasenaError}</p>}\r\n\r\n                        <label htmlFor=\"confirmarContrasena\">Confirmar Contraseña:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"confirmarContrasena\"\r\n                            name=\"confirmarContrasena\"\r\n                            value={confirmarContrasena}\r\n                            onChange={handleConfirmarContrasenaChange}\r\n                            required\r\n                        />\r\n\r\n                        <div className=\"div pt-4\">\r\n                            <input type=\"submit\" value=\"Crear Usuario\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"py-5\">\r\n                <div className=\"login-container\">\r\n                    <h2 className=\"pb-3\">Borrar Usuario</h2>\r\n                    <form action=\"#\" method=\"post\" onSubmit={handleBorrarUsuarioSubmit}>\r\n                        <label htmlFor=\"selectUsuario\">Selecciona el usuario:</label>\r\n                        <select\r\n                            name=\"selectUsuario\"\r\n                            id=\"selectUsuario\"\r\n                            value={usuarioSeleccionado}\r\n                            onChange={handleUsuarioSeleccionadoChange}\r\n                        >\r\n                            <option value=\"\">Selecciona un usuario</option>\r\n                            {usuarios.map((usuario) => (\r\n                                <option key={usuario.id} value={usuario.id}>\r\n                                    {usuario.nombre}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n\r\n                        <div className=\"div pt-4\">\r\n                            <input type=\"submit\" value=\"Borrar Usuario\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Usuario;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}