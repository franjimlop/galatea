{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\OneDrive\\\\Documents\\\\GitHub\\\\galatea\\\\src\\\\App.jsx\";\nimport React from 'react';\nimport './styles/index.css';\nimport Routes from './routes';\nimport Footer from './components/footer/footer';\nimport Header from './components/header/header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App fondo\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nconst express = require('express');\nconst cors = require('cors');\nconst {\n  Sequelize,\n  DataTypes\n} = require('sequelize');\nconst app = express();\nconst corsOptions = {\n  origin: 'http://localhost:3000',\n  // Reemplaza con el dominio de tu aplicación frontend\n  optionsSuccessStatus: 200\n};\napp.use(cors(corsOptions));\nconst sequelize = new Sequelize('bdgalatea', 'usuario', 'contraseña', {\n  host: 'localhost',\n  dialect: 'mysql'\n});\nconst Usuario = sequelize.define('Usuario', {\n  // Definir la estructura del modelo de Usuario\n  id: {\n    type: DataTypes.INTEGER,\n    primaryKey: true,\n    autoIncrement: true\n  },\n  nombre: {\n    type: DataTypes.STRING,\n    allowNull: false\n  },\n  password: {\n    type: DataTypes.STRING,\n    allowNull: false\n  }\n});\napp.get('/usuarios', async (req, res) => {\n  // Obtener todos los usuarios\n  const usuarios = await Usuario.findAll();\n  res.json(usuarios);\n});\n\n// Otros endpoints y configuraciones del servidor...\n\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => {\n  console.log(`Servidor en ejecución en http://localhost:${PORT}`);\n});\ntry {\n  await sequelize.authenticate();\n  console.log('Conexión a la base de datos establecida correctamente.');\n} catch (error) {\n  console.error('Error al conectar con la base de datos:', error);\n}\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Routes","Footer","Header","jsxDEV","_jsxDEV","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","express","require","cors","Sequelize","DataTypes","app","corsOptions","origin","optionsSuccessStatus","use","sequelize","host","dialect","Usuario","define","id","type","INTEGER","primaryKey","autoIncrement","nombre","STRING","allowNull","password","get","req","res","usuarios","findAll","json","PORT","process","env","listen","console","log","authenticate","error","$RefreshReg$"],"sources":["C:/Users/franc/OneDrive/Documents/GitHub/galatea/src/App.jsx"],"sourcesContent":["import React from 'react';\nimport './styles/index.css';\nimport Routes from './routes';\nimport Footer from './components/footer/footer';\nimport Header from './components/header/header';\n\nfunction App() {\n  return (\n    <div className=\"App fondo\">\n      <Header/>\n      <Routes />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\nconst express = require('express');\nconst cors = require('cors');\nconst { Sequelize, DataTypes } = require('sequelize');\n\nconst app = express();\n\nconst corsOptions = {\n    origin: 'http://localhost:3000', // Reemplaza con el dominio de tu aplicación frontend\n    optionsSuccessStatus: 200,\n};\n\napp.use(cors(corsOptions));\n\nconst sequelize = new Sequelize('bdgalatea', 'usuario', 'contraseña', {\n    host: 'localhost',\n    dialect: 'mysql',\n});\n\nconst Usuario = sequelize.define('Usuario', {\n    // Definir la estructura del modelo de Usuario\n    id: {\n        type: DataTypes.INTEGER,\n        primaryKey: true,\n        autoIncrement: true,\n    },\n    nombre: {\n        type: DataTypes.STRING,\n        allowNull: false,\n    },\n    password: {\n        type: DataTypes.STRING,\n        allowNull: false,\n    },\n});\n\napp.get('/usuarios', async (req, res) => {\n    // Obtener todos los usuarios\n    const usuarios = await Usuario.findAll();\n    res.json(usuarios);\n});\n\n// Otros endpoints y configuraciones del servidor...\n\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => {\n    console.log(`Servidor en ejecución en http://localhost:${PORT}`);\n});\n\ntry {\n    await sequelize.authenticate();\n    console.log('Conexión a la base de datos establecida correctamente.');\n} catch (error) {\n    console.error('Error al conectar con la base de datos:', error);\n}  "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAKE,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBH,OAAA,CAACF,MAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTP,OAAA,CAACJ,MAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVP,OAAA,CAACH,MAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACC,EAAA,GARQP,GAAG;AAUZ,eAAeA,GAAG;AAElB,MAAMQ,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAM;EAAEE,SAAS;EAAEC;AAAU,CAAC,GAAGH,OAAO,CAAC,WAAW,CAAC;AAErD,MAAMI,GAAG,GAAGL,OAAO,CAAC,CAAC;AAErB,MAAMM,WAAW,GAAG;EAChBC,MAAM,EAAE,uBAAuB;EAAE;EACjCC,oBAAoB,EAAE;AAC1B,CAAC;AAEDH,GAAG,CAACI,GAAG,CAACP,IAAI,CAACI,WAAW,CAAC,CAAC;AAE1B,MAAMI,SAAS,GAAG,IAAIP,SAAS,CAAC,WAAW,EAAE,SAAS,EAAE,YAAY,EAAE;EAClEQ,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE;AACb,CAAC,CAAC;AAEF,MAAMC,OAAO,GAAGH,SAAS,CAACI,MAAM,CAAC,SAAS,EAAE;EACxC;EACAC,EAAE,EAAE;IACAC,IAAI,EAAEZ,SAAS,CAACa,OAAO;IACvBC,UAAU,EAAE,IAAI;IAChBC,aAAa,EAAE;EACnB,CAAC;EACDC,MAAM,EAAE;IACJJ,IAAI,EAAEZ,SAAS,CAACiB,MAAM;IACtBC,SAAS,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE;IACNP,IAAI,EAAEZ,SAAS,CAACiB,MAAM;IACtBC,SAAS,EAAE;EACf;AACJ,CAAC,CAAC;AAEFjB,GAAG,CAACmB,GAAG,CAAC,WAAW,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACrC;EACA,MAAMC,QAAQ,GAAG,MAAMd,OAAO,CAACe,OAAO,CAAC,CAAC;EACxCF,GAAG,CAACG,IAAI,CAACF,QAAQ,CAAC;AACtB,CAAC,CAAC;;AAEF;;AAEA,MAAMG,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;AACrCzB,GAAG,CAAC4B,MAAM,CAACH,IAAI,EAAE,MAAM;EACnBI,OAAO,CAACC,GAAG,CAAE,6CAA4CL,IAAK,EAAC,CAAC;AACpE,CAAC,CAAC;AAEF,IAAI;EACA,MAAMpB,SAAS,CAAC0B,YAAY,CAAC,CAAC;EAC9BF,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;AACzE,CAAC,CAAC,OAAOE,KAAK,EAAE;EACZH,OAAO,CAACG,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;AACnE;AAAC,IAAAtC,EAAA;AAAAuC,YAAA,CAAAvC,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}