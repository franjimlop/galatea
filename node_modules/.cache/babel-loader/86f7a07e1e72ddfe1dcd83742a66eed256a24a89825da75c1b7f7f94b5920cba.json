{"ast":null,"code":"import React,{useState,useEffect}from'react';import'../styles/login.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ImgCarrusel=()=>{const[nombreImagen,setNombreImagen]=useState('');const[imagen,setImagen]=useState(null);const[imagenes,setImagenes]=useState([]);const[imagenSeleccionada,setImagenSeleccionada]=useState('');useEffect(()=>{const obtenerImagenes=async()=>{try{const response=await fetch('http://localhost:5000/imagenes');if(response.ok){const data=await response.json();setImagenes(data);}else{console.error('Error al obtener la lista de imágenes');}}catch(error){console.error('Error al obtener la lista de imágenes:',error);}};obtenerImagenes();},[]);const handleNombreImagenChange=e=>{setNombreImagen(e.target.value);};const handleImagenChange=e=>{const selectedImage=e.target.files[0];// Validar tamaño de la imagen\nconst maxSize=2*1024*1024;// 2MB\nif(selectedImage&&selectedImage.size>maxSize){alert('La imagen seleccionada supera el tamaño máximo de 2MB');e.target.value=null;// Limpiar el input de archivo\n}else{setImagen(selectedImage);}};const handleImagenSeleccionadaChange=e=>{setImagenSeleccionada(e.target.value);};const handleSubirImagenSubmit=async e=>{e.preventDefault();if(!nombreImagen||!imagen){alert('Por favor, completa todos los campos');return;}try{const formData=new FormData();formData.append('nombre',nombreImagen);formData.append('imagen',imagen);const response=await fetch('http://localhost:5000/imagenes',{method:'POST',body:formData});if(response.ok){alert('Imagen subida exitosamente');// Borrar los campos después de subir una imagen\nsetNombreImagen('');setImagen(null);window.location.reload();}else{alert('Error al subir la imagen');}}catch(error){console.error('Error al enviar datos al backend:',error);}};const handleBorrarImagenSubmit=async e=>{e.preventDefault();if(!imagenSeleccionada){alert('Por favor, selecciona una imagen para borrar');return;}try{const response=await fetch(\"http://localhost:5000/imagenes/\".concat(imagenSeleccionada),{method:'DELETE'});if(response.ok){alert('Imagen borrada exitosamente');window.location.reload();}else{const data=await response.json();alert(\"Error al borrar imagen: \".concat(data.error));}}catch(error){console.error('Error al enviar solicitud de borrado al backend:',error);alert('Error al conectar con el servidor');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"py-5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"pb-3\",children:\"Crear Imagen\"}),/*#__PURE__*/_jsxs(\"form\",{action:\"#\",method:\"post\",encType:\"multipart/form-data\",onSubmit:handleSubirImagenSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"nombreImagen\",children:\"Nombre de la imagen:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"nombreImagen\",name:\"nombreImagen\",value:nombreImagen,onChange:handleNombreImagenChange,required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"imagen\",children:\"Escoger imagen (Tama\\xF1o recomendado 1920x1080 / M\\xE1ximo 2MB):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"imagen\",name:\"imagen\",accept:\"image/*\",onChange:handleImagenChange,required:true}),/*#__PURE__*/_jsx(\"div\",{className:\"div pt-4\",children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Subir Imagen\"})})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"py-5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"pb-3\",children:\"Borrar Imagen\"}),/*#__PURE__*/_jsxs(\"form\",{action:\"#\",method:\"post\",onSubmit:handleBorrarImagenSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"selectImagen\",children:\"Selecciona la imagen:\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"selectImagen\",id:\"selectImagen\",value:imagenSeleccionada,onChange:handleImagenSeleccionadaChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Selecciona una imagen\"}),imagenes.map(imagen=>/*#__PURE__*/_jsx(\"option\",{value:imagen.id,children:imagen.nombre},imagen.id))]}),/*#__PURE__*/_jsx(\"div\",{className:\"div pt-4\",children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Borrar Imagen\"})})]})]})})]});};export default ImgCarrusel;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","ImgCarrusel","nombreImagen","setNombreImagen","imagen","setImagen","imagenes","setImagenes","imagenSeleccionada","setImagenSeleccionada","obtenerImagenes","response","fetch","ok","data","json","console","error","handleNombreImagenChange","e","target","value","handleImagenChange","selectedImage","files","maxSize","size","alert","handleImagenSeleccionadaChange","handleSubirImagenSubmit","preventDefault","formData","FormData","append","method","body","window","location","reload","handleBorrarImagenSubmit","concat","children","className","action","encType","onSubmit","htmlFor","type","id","name","onChange","required","accept","map","nombre"],"sources":["C:/Users/franc/OneDrive/Documents/GitHub/galatea/src/pages/imgcarrusel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/login.css';\r\n\r\nconst ImgCarrusel = () => {\r\n    const [nombreImagen, setNombreImagen] = useState('');\r\n    const [imagen, setImagen] = useState(null);\r\n    const [imagenes, setImagenes] = useState([]);\r\n    const [imagenSeleccionada, setImagenSeleccionada] = useState('');\r\n\r\n    useEffect(() => {\r\n        const obtenerImagenes = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/imagenes');\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    setImagenes(data);\r\n                } else {\r\n                    console.error('Error al obtener la lista de imágenes');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error al obtener la lista de imágenes:', error);\r\n            }\r\n        };\r\n\r\n        obtenerImagenes();\r\n    }, []);\r\n\r\n    const handleNombreImagenChange = (e) => {\r\n        setNombreImagen(e.target.value);\r\n    };\r\n\r\n    const handleImagenChange = (e) => {\r\n        const selectedImage = e.target.files[0];\r\n\r\n        // Validar tamaño de la imagen\r\n        const maxSize = 2 * 1024 * 1024; // 2MB\r\n        if (selectedImage && selectedImage.size > maxSize) {\r\n            alert('La imagen seleccionada supera el tamaño máximo de 2MB');\r\n            e.target.value = null; // Limpiar el input de archivo\r\n        } else {\r\n            setImagen(selectedImage);\r\n        }\r\n    };\r\n\r\n    const handleImagenSeleccionadaChange = (e) => {\r\n        setImagenSeleccionada(e.target.value);\r\n    };\r\n\r\n    const handleSubirImagenSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!nombreImagen || !imagen) {\r\n            alert('Por favor, completa todos los campos');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('nombre', nombreImagen);\r\n            formData.append('imagen', imagen);\r\n\r\n            const response = await fetch('http://localhost:5000/imagenes', {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            if (response.ok) {\r\n                alert('Imagen subida exitosamente');\r\n\r\n                // Borrar los campos después de subir una imagen\r\n                setNombreImagen('');\r\n                setImagen(null);\r\n                window.location.reload();\r\n            } else {\r\n                alert('Error al subir la imagen');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al enviar datos al backend:', error);\r\n        }\r\n    };\r\n\r\n    const handleBorrarImagenSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!imagenSeleccionada) {\r\n            alert('Por favor, selecciona una imagen para borrar');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/imagenes/${imagenSeleccionada}`, {\r\n                method: 'DELETE',\r\n            });\r\n\r\n            if (response.ok) {\r\n                alert('Imagen borrada exitosamente');\r\n                window.location.reload();\r\n            } else {\r\n                const data = await response.json();\r\n                alert(`Error al borrar imagen: ${data.error}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al enviar solicitud de borrado al backend:', error);\r\n            alert('Error al conectar con el servidor');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"py-5\">\r\n                <div className=\"login-container\">\r\n                    <h2 className=\"pb-3\">Crear Imagen</h2>\r\n                    <form action=\"#\" method=\"post\" encType=\"multipart/form-data\" onSubmit={handleSubirImagenSubmit}>\r\n                        <label htmlFor=\"nombreImagen\">Nombre de la imagen:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"nombreImagen\"\r\n                            name=\"nombreImagen\"\r\n                            value={nombreImagen}\r\n                            onChange={handleNombreImagenChange}\r\n                            required\r\n                        />\r\n\r\n                        <label htmlFor=\"imagen\">Escoger imagen (Tamaño recomendado 1920x1080 / Máximo 2MB):</label>\r\n                        <input\r\n                            type=\"file\"\r\n                            id=\"imagen\"\r\n                            name=\"imagen\"\r\n                            accept=\"image/*\"\r\n                            onChange={handleImagenChange}\r\n                            required\r\n                        />\r\n\r\n                        <div className=\"div pt-4\">\r\n                            <input type=\"submit\" value=\"Subir Imagen\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"py-5\">\r\n                <div className=\"login-container\">\r\n                    <h2 className=\"pb-3\">Borrar Imagen</h2>\r\n                    <form action=\"#\" method=\"post\" onSubmit={handleBorrarImagenSubmit}>\r\n                        <label htmlFor=\"selectImagen\">Selecciona la imagen:</label>\r\n                        <select\r\n                            name=\"selectImagen\"\r\n                            id=\"selectImagen\"\r\n                            value={imagenSeleccionada}\r\n                            onChange={handleImagenSeleccionadaChange}\r\n                        >\r\n                            <option value=\"\">Selecciona una imagen</option>\r\n                            {imagenes.map((imagen) => (\r\n                                <option key={imagen.id} value={imagen.id}>\r\n                                    {imagen.nombre}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n\r\n                        <div className=\"div pt-4\">\r\n                            <input type=\"submit\" value=\"Borrar Imagen\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImgCarrusel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}